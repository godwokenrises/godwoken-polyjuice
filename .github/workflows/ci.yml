name: MainCI

on:
  push:
    branches-ignore:
    - fuzz*
    - mock*
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
    
    - name: Install Rust components
      run: rustup component add rustfmt && rustup component add clippy
    - name: Install moleculec
      run: |
        export MOLC_VERSION=$(cat deps/godwoken-scripts/c/Makefile | egrep "MOLC_VERSION :=" | awk '{print $3}')
        test "$(moleculec --version)" = "Moleculec $MOLC_VERSION" \
        || CARGO_TARGET_DIR=target/ cargo install moleculec --version $MOLC_VERSION
    - name: Install ckb-cli from nervos/godwoken-prebuilds:latest
      run: |
        docker run --rm -v /bin:/bin-dir nervos/godwoken-prebuilds:latest \
          cp /bin/ckb-cli /bin-dir/ && echo "Install ckb-cli to /bin/"
        ckb-cli --version

    - name: Validate the checksum of SudtERC20Proxy Contract.bin
      run: make contract/sudt-erc20-proxy
        
    - name: Run Integration-Test
      run: bash devtools/ci/integration-test.sh

    - name: Checksums of generator and validator
      run: sha256sum build/generator build/generator_log build/validator build/validator_log


  integration-test:
    uses: nervosnetwork/godwoken-tests/.github/workflows/reusable-integration-test-v1.yml@develop
    with:
      # github.head_ref: The head_ref or source branch of the pull request in a workflow run. This property is only available when the event that triggers a workflow run is either pull_request or pull_request_target.
      # github.ref: The branch or tag ref that triggered the workflow run. For branches this is the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>.
      polyjuice_ref: ${{ github.head_ref || github.ref }}
      kicker_ref: refs/pull/214/head
